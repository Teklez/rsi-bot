"""user_symbol string instead of FK

Revision ID: 5edf796c041d
Revises: 02ccfbe7dabf
Create Date: 2025-09-27 11:15:35.370903

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5edf796c041d'
down_revision: Union[str, Sequence[str], None] = '02ccfbe7dabf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # NEW STEP 1: EXPLICITLY DROP THE PRIMARY KEY CONSTRAINT
    # This must be done before altering any columns that are part of the key.
    # ASSUMPTION: The Primary Key is named 'user_symbols_pkey'.
    # If the name is different, you MUST replace it below.
    op.drop_constraint(
        'user_symbols_pkey',  # <-- Use your actual PK name if different!
        'user_symbols',
        type_='primary'
    )
    
    # Column additions/alterations
    op.add_column('user_symbols', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('user_symbols', sa.Column('symbol', sa.String(), nullable=False))
    
    # This alteration is now safe because the PK constraint is gone.
    op.alter_column('user_symbols', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
               
    # Foreign Key changes
    op.drop_constraint(op.f('user_symbols_symbol_id_fkey'), 'user_symbols', type_='foreignkey')
    op.drop_constraint(op.f('user_symbols_user_id_fkey'), 'user_symbols', type_='foreignkey')
    op.create_foreign_key(None, 'user_symbols', 'users', ['user_id'], ['id'])
    
    # Drop old column
    op.drop_column('user_symbols', 'symbol_id')
    
    # NEW STEP 2: RE-CREATE PRIMARY KEY ON THE NEW 'id' COLUMN
    # This assumes 'id' is intended to be the new single-column primary key.
    op.create_primary_key(
        'user_symbols_pkey',
        'user_symbols',
        ['id']
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_symbols', sa.Column('symbol_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'user_symbols', type_='foreignkey')
    op.create_foreign_key(op.f('user_symbols_user_id_fkey'), 'user_symbols', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('user_symbols_symbol_id_fkey'), 'user_symbols', 'symbols', ['symbol_id'], ['id'], ondelete='CASCADE')
    op.alter_column('user_symbols', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('user_symbols', 'symbol')
    op.drop_column('user_symbols', 'id')
    # ### end Alembic commands ###
