"""add_dual_rsi_thresholds_and_alert_type

Revision ID: daa77c3f9ed2
Revises: fix_user_symbols_seq
Create Date: 2025-09-29 11:40:58.861919

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'daa77c3f9ed2'
down_revision: Union[str, Sequence[str], None] = 'fix_user_symbols_seq'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('alerts', sa.Column('symbol', sa.String(), nullable=False))
    op.add_column('alerts', sa.Column('alert_type', sa.String(), nullable=False))
    op.drop_constraint(op.f('alerts_symbol_id_fkey'), 'alerts', type_='foreignkey')
    op.drop_column('alerts', 'symbol_id')
    op.add_column('settings', sa.Column('rsi_oversold_threshold', sa.Integer(), nullable=False))
    op.add_column('settings', sa.Column('rsi_overbought_threshold', sa.Integer(), nullable=False))
    op.drop_column('settings', 'rsi_threshold')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('settings', sa.Column('rsi_threshold', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_column('settings', 'rsi_overbought_threshold')
    op.drop_column('settings', 'rsi_oversold_threshold')
    op.add_column('alerts', sa.Column('symbol_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('alerts_symbol_id_fkey'), 'alerts', 'symbols', ['symbol_id'], ['id'], ondelete='CASCADE')
    op.drop_column('alerts', 'alert_type')
    op.drop_column('alerts', 'symbol')
    # ### end Alembic commands ###
